{
  "version": 3,
  "file": "bundle.css",
  "sources": [
    "../../App.svelte",
    "../../ActionTemplate.svelte",
    "../../EntityPage.svelte",
    "../../Navbar.svelte",
    "../../Main.svelte"
  ],
  "sourcesContent": [
    "<script>\n    import {Router, Link, Route} from \"svelte-routing\";\n    import {USER} from './store.js';\n    import {doQuery} from './utils.js';\n    import {onMount} from 'svelte';\n    import Navbar from './components/Navbar.svelte';\n\n    import Main from './route/Main.svelte'\n    import EntityPage from \"./components/EntityPage.svelte\";\n    import BalanceTable from \"./components/BalanceTable.svelte\";\n    import ActionTemplate from \"./components/ActionTemplate.svelte\";\n    import BalanceCreate from \"./components/BalanceCreate.svelte\";\n    import BalanceEdit from \"./components/BalanceEdit.svelte\";\n    import ArticleTable from \"./components/ArticleTable.svelte\";\n    import ArticleCreate from \"./components/ArticleCreate.svelte\";\n    import ArticleEdit from \"./components/ArticleEdit.svelte\";\n    import OperationTable from \"./components/OperationTable.svelte\";\n    import OperationCreate from \"./components/OperationCreate.svelte\";\n    import OperationEdit from \"./components/OperationEdit.svelte\";\n    import Registration from \"./route/Registration.svelte\";\n    import AdminPane from \"./route/AdminPane.svelte\";\n\n    let mounted = false;\n\n    onMount(() => {\n        doQuery('/user')\n                .then(response => response.json())\n                .then(json => {\n                    USER.set(json);\n                }).catch(() => {\n            USER.set(null);\n        }).finally(() => {\n            mounted = true;\n        });\n    })\n</script>\n\n<svelte:head>\n    <link rel=\"stylesheet\" href=\"https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css\">\n</svelte:head>\n\n{#if mounted}\n    <header>\n        <Navbar/>\n    </header>\n\n    <Router>\n        <main>\n            {#if $USER !== null}\n                <Route path=\"/balance\">\n                    <EntityPage name=\"Balance\">\n                        <div slot=\"table\">\n                            <BalanceTable/>\n                        </div>\n                    </EntityPage>\n                </Route>\n\n                <Route path=\"/balance/create\">\n                    <ActionTemplate name=\"Balance\">\n                        <div slot=\"fields\">\n                            <BalanceCreate/>\n                        </div>\n                    </ActionTemplate>\n                </Route>\n\n                <Route path=\"/balance/:id\" let:params>\n                    <ActionTemplate name=\"Balance\">\n                        <div slot=\"fields\">\n                            <BalanceEdit id=\"{params.id}\"/>\n                        </div>\n                    </ActionTemplate>\n                </Route>\n\n                <Route path=\"/article\">\n                    <EntityPage name=\"Article\">\n                        <div slot=\"table\">\n                            <ArticleTable/>\n                        </div>\n                    </EntityPage>\n                </Route>\n\n                <Route path=\"/article/create\">\n                    <ActionTemplate name=\"Article\">\n                        <div slot=\"fields\">\n                            <ArticleCreate/>\n                        </div>\n                    </ActionTemplate>\n                </Route>\n\n                <Route path=\"/article/:id\" let:params>\n                    <ActionTemplate name=\"Article\">\n                        <div slot=\"fields\">\n                            <ArticleEdit id=\"{params.id}\"/>\n                        </div>\n                    </ActionTemplate>\n                </Route>\n\n                <Route path=\"/operation\">\n                    <EntityPage name=\"Operation\">\n                        <div slot=\"table\">\n                            <OperationTable/>\n                        </div>\n                    </EntityPage>\n                </Route>\n\n                <Route path=\"/operation/create\">\n                    <ActionTemplate name=\"Operation\">\n                        <div slot=\"fields\">\n                            <OperationCreate/>\n                        </div>\n                    </ActionTemplate>\n                </Route>\n\n                <Route path=\"/operation/:id\" let:params>\n                    <ActionTemplate name=\"Operation\">\n                        <div slot=\"fields\">\n                            <OperationEdit id=\"{params.id}\"/>\n                        </div>\n                    </ActionTemplate>\n                </Route>\n\n                {#if $USER.roles.find(role => role === \"ADMIN\") !== undefined}\n                    <Route path=\"/admin\" component=\"{AdminPane}\"/>\n                {/if}\n            {:else}\n                <Route path=\"/signUp\" component={Registration}/>\n            {/if}\n            <Route path=\"/\" component={Main}/>\n        </main>\n    </Router>\n{/if}\n\n<style>\n    main {\n        margin-top: 1em;\n    }\n\n</style>",
    "<script>\n    export let name;\n</script>\n\n\n<div class=\"container-fluid grid\">\n    <div class=\"title\">\n        <h3>{name}</h3>\n    </div>\n\n    <slot name=\"fields\">\n\n    </slot>\n</div>\n\n<style>\n    h3 {\n        margin: 0;\n    }\n\n    .title {\n        display: grid;\n        align-content: start;\n    }\n\n    .grid {\n        display: grid;\n        gap: 1em;\n    }\n</style>",
    "<script>\n    import {link} from 'svelte-routing';\n    export let name;\n</script>\n\n\n<div class=\"container-fluid grid\">\n    <div class=\"title\">\n        <h3>{name}</h3>\n        <a href=\"{name.toLowerCase()}/create\" use:link>Create</a>\n    </div>\n\n    <slot name=\"table\">\n\n    </slot>\n</div>\n\n<style>\n    h3 {\n        margin: 0;\n    }\n\n    .title {\n        display: grid;\n        align-content: start;\n    }\n\n    .grid {\n        display: grid;\n        gap: 1em;\n    }\n</style>",
    "<script>\n    import {link} from 'svelte-routing';\n    import {USER} from '../store.js';\n\n    $: route = document.location.pathname\n            .substr(document.location.pathname.lastIndexOf('/'));\n</script>\n\n<nav class=\"navbar navbar-dark bg-dark navbar-expand-lg\">\n    <a class=\"navbar-brand\" href=\"/\">BUDJET</a>\n    <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNav\"\n            aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n        <span class=\"navbar-toggler-icon\"></span>\n    </button>\n    <div class=\"collapse navbar-collapse\" id=\"navbarNav\">\n        {#if $USER !== null}\n            <ul class=\"navbar-nav\">\n                <li class=\"nav-item {route === 'balance' ? 'active' : ''}\">\n                    <a class=\"nav-link\" href=\"/balance\" use:link>Balance</a>\n                </li>\n\n                <li class=\"nav-item {route === 'article' ? 'active' : ''}\">\n                    <a class=\"nav-link\" href=\"/article\" use:link>Article</a>\n                </li>\n\n                <li class=\"nav-item {route === 'operation' ? 'active' : ''}\">\n                    <a class=\"nav-link\" href=\"/operation\" use:link>Operation</a>\n                </li>\n\n                {#if $USER.roles.find(role => role === \"ADMIN\") !== undefined}\n                    <li class=\"nav-item {route === 'admin' ? 'active' : ''}\">\n                        <a class=\"nav-link\" href=\"/admin\" use:link>Admin</a>\n                    </li>\n                {/if}\n            </ul>\n        {/if}\n\n        <div class=\"authBlock\">\n            {#if $USER === null}\n                <a href=\"/signUp\" use:link>\n                    <button type=\"button\" class=\"btn btn-outline-info\">Sign Up</button>\n                </a>\n\n                <a href=\"/login\">\n                    <button type=\"button\" class=\"btn btn-outline-info\">Sign In</button>\n                </a>\n\n            {:else}\n                <a href=\"/logout\">\n                    <button type=\"button\" class=\"btn btn-outline-info\">Sign Out</button>\n                </a>\n            {/if}\n        </div>\n    </div>\n</nav>\n\n<style>\n    .authBlock {\n        margin-left: auto;\n        display: grid;\n        grid-auto-flow: column;\n        gap: 0 1em;\n    }\n</style>",
    "<script>\n\n</script>\n\n<div class=\"container grid\">\n    <div class=\"title\">\n        <h3>\n            Автоматизация домашнего бюджета\n        </h3>\n        <img src=\"/img/money.jpg\"/>\n    </div>\n</div>\n\n<style>\n    .title {\n        display: grid;\n        justify-items: center;\n    }\n</style>\n"
  ],
  "names": [],
  "mappings": "AAqII,IAAI,eAAC,CAAC,AACF,UAAU,CAAE,GAAG,AACnB,CAAC;ACvHD,EAAE,eAAC,CAAC,AACA,MAAM,CAAE,CAAC,AACb,CAAC,AAED,MAAM,eAAC,CAAC,AACJ,OAAO,CAAE,IAAI,CACb,aAAa,CAAE,KAAK,AACxB,CAAC,AAED,KAAK,eAAC,CAAC,AACH,OAAO,CAAE,IAAI,CACb,GAAG,CAAE,GAAG,AACZ,CAAC;ACVD,EAAE,eAAC,CAAC,AACA,MAAM,CAAE,CAAC,AACb,CAAC,AAED,MAAM,eAAC,CAAC,AACJ,OAAO,CAAE,IAAI,CACb,aAAa,CAAE,KAAK,AACxB,CAAC,AAED,KAAK,eAAC,CAAC,AACH,OAAO,CAAE,IAAI,CACb,GAAG,CAAE,GAAG,AACZ,CAAC;AC2BD,UAAU,cAAC,CAAC,AACR,WAAW,CAAE,IAAI,CACjB,OAAO,CAAE,IAAI,CACb,cAAc,CAAE,MAAM,CACtB,GAAG,CAAE,CAAC,CAAC,GAAG,AACd,CAAC;AChDD,MAAM,cAAC,CAAC,AACJ,OAAO,CAAE,IAAI,CACb,aAAa,CAAE,MAAM,AACzB,CAAC"
}